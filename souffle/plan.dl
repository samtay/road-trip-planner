.type ParkId <: symbol
.type CampId <: symbol
.type Name <: symbol
.type Distance <: float

.decl camp(camp:CampId, park: ParkId, name:Name)
.input camp(filename="campground.facts")

.decl park(park:ParkId, name:Name)
.input park(filename="park.facts")

.decl distance(camp1:CampId, camp2:CampId, dist:Distance)
.input distance(filename="distance.facts")

.decl location(camp:CampId, lat:float, long: float)
.input location(filename="location.facts")

.decl amenities(camp:CampId, rv:number, internet:symbol, cell:symbol, dump:symbol)
.input amenities(filename="amenities.facts")

// Campgrounds that fit our RV
// (note: some campgrounds don't have accurate rv limits here and just list 0)
.decl rv_camp(id:CampId)
rv_camp(id) :- camp(id, _, _), amenities(id, rv_len, _, _, _), (rv_len = 0 ; rv_len >= 34).

// Distances between campgrounds that fit our RV
.decl rv_dist(camp1:CampId, camp2:CampId, dist:Distance)
rv_dist(from, to, len) :- distance(from, to, len), rv_camp(from), rv_camp(to).
rv_dist(to, from, len) :- distance(from, to, len), rv_camp(from), rv_camp(to).

// End location near Mount Rainier
.decl camp_near_seattle(camp:CampId)
camp_near_seattle(c) :- camp(c, "mora", "Cougar Rock Campground").

// Optimized road trip segments
// 1. Limit 600mi between stops
// 2. Exceed 100mi between stops
// 3. Make progress towards final destination
.decl segment(camp1:CampId, camp2:CampId, dist:Distance)
segment(from, to, len) :-
  rv_dist(from, to, len),
  100 <= len, len <= 600,
  rv_dist(from, end, dist_from),
  rv_dist(to, end, dist_to),
  dist_from > dist_to,
  camp_near_seattle(end).

// Generate a non-deterministic path
.decl road_trip_segment(from:CampId, to:CampId, dist:Distance, acc:Distance, stop_ix:number) choice-domain from

// Start in the Everglades
road_trip_segment(f, t, d, d, 1) :-
  camp(f, "ever", "Flamingo Campground"), segment(f, t, d).
// Stop at Mount Rainier
road_trip_segment(f, t, d, acc+d, ix+1) :-
  road_trip_segment(_, f, _, acc, ix),
  segment(f, t, d).

// Generate a path with minimum distance between stops
.decl road_trip_segment_min(from:CampId, to:CampId, dist:Distance, acc:Distance, stop_ix:number) choice-domain from
road_trip_segment_min(f, t, d, d, 1) :-
  camp(f, "ever", "Flamingo Campground"), segment(f, t, d).
// Stop at Mount Rainier
road_trip_segment_min(f, t, d, acc+d, ix+1) :-
  road_trip_segment_min(_, f, _, acc, ix),
  d = min l : segment(f, t, l).

.decl ex(p1:Name, c1:Name, p2:Name, c2:Name, d:Distance, acc:Distance, ix:number)
.output ex(filename="souffle-plan.tsv")
ex(p1, c1, p2, c2, d, acc, ix) :-
  road_trip_segment(f, t, d, acc, ix),
  camp(f, pid1, c1),
  camp(t, pid2, c2),
  park(pid1, p1),
  park(pid2, p2).
